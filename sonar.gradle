apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property("sonar.organization", "josemlechon")
        property("sonar.projectVersion", "1.0.0")
        property("sonar.language", "kotlin")
        property("sonar.sourceEncoding", "UTF-8")
        property("sonar.java.coveragePlugin", "jacoco")
        // taken from `jacoco.gradle`
        property(
            "sonar.coverage.exclusions",
            "**/test/**,**/androidTest/**,**/R.class,**/BuildConfig.*,**/Manifest*.*,**/*Test*.*,**/*Dto*.*,**/android/databinding/*,**/androidx/databinding/*,**/di/module/*,**/*MapperImpl*.*,**/BuildConfig.*,**/*Component*.*,**/*BR*.*,**/Manifest*.*,**/*Companion*.*,**/*Module.*,**/*Dagger*.*,**/*MembersInjector*.*,**/*Extensions*.*,**/InputMethodManagerLeaks.*,**/*_Factory*.*,**/*_Provide*Factory*.*"
        )

        property ("sonar.tests", "src/test")
       // property ("sonar.jacoco.coverage.reportPaths", "$buildDir/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
        property ("sonar.junit.reportsPaths", "$buildDir/test-results/")
        //property ("sonar.androidLint.reportPaths", "$buildDir/reports/lint-results-debug.xml")

    }
}

tasks.sonarqube {
    //dependsOn(":app:testDebugUnitTestCoverage")
    dependsOn(":app:testDebugUnitTest")
}